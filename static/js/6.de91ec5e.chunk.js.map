{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","components/Header.jsx","components/projects/ProjectCard.jsx","components/Projects.jsx"],"names":["Row","React","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","_objectSpread","classNames","apply","displayName","Header","title","children","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","_project$links","text","theme","useContext","ThemeContext","project","_useState","useState","_useState2","_slicedToArray","lightboxVisible","setLightboxVisible","_useState3","_useState4","currentImageIndex","setCurrentImageIndex","images","original","image","thumbnail","_toConsumableArray","additionalImages","map","_jsxs","Col","Card","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","Img","variant","src","onClick","Body","Title","Text","bodyText","ReactMarkdown","links","link","Button","window","open","href","tags","Footer","cardFooterBackground","tag","Badge","pill","bg","bsPrimaryVariant","Lightbox","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","containerStyle","marginBottom","Projects","header","data","setData","jsonUrl","process","endpoints","projects","useEffect","fetch","method","then","res","json","catch","err","categoryData","_Fragment","Object","entries","_ref2","categoryName","Container","xs","sm","md","lg","Fade","FallbackSpinner"],"mappings":"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","file":"static/js/6.de91ec5e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useContext, useState } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport 'react-image-lightbox/style.css';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n  const [lightboxVisible, setLightboxVisible] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const openLightbox = (index) => {\n    setCurrentImageIndex(index);\n    setLightboxVisible(true);\n  };\n\n  const closeLightbox = () => {\n    setLightboxVisible(false);\n  };\n\n  const images = [\n    { original: project?.image, thumbnail: project?.image }, // Main image\n    ...(project?.additionalImages || []).map((image) => ({\n      original: image,\n      thumbnail: image,\n    })), // Additional images\n  ];\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} onClick={() => openLightbox(0)} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n\n      {/* Use the react-image-lightbox */}\n      {lightboxVisible && (\n        <Lightbox\n          mainSrc={images[currentImageIndex].original}\n          nextSrc={images[(currentImageIndex + 1) % images.length].original}\n          prevSrc={images[(currentImageIndex + images.length - 1) % images.length].original}\n          onCloseRequest={closeLightbox}\n          onMovePrevRequest={\n            () => setCurrentImageIndex((currentImageIndex + images.length - 1) % images.length)\n          }\n          onMoveNextRequest={() => setCurrentImageIndex((currentImageIndex + 1) % images.length)}\n        />\n      )}\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    additionalImages: PropTypes.arrayOf(PropTypes.string),\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        href: PropTypes.string.isRequired,\n      }),\n    ),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport ProjectCard from './projects/ProjectCard';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n    textAlign: 'center',\n  },\n};\n\nconst Projects = (props) => {\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  const baseUrl = process.env.PUBLIC_URL;\n  const jsonUrl = `${baseUrl}/${endpoints.projects}`;\n\n  useEffect(() => {\n    fetch(jsonUrl, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  const renderProjectsByCategory = (categoryData) => {\n    if (!categoryData) return null;\n\n    return Object.entries(categoryData).map(([categoryName, projects]) => (\n      <div key={categoryName} className=\"section-content-container\">\n        <Container style={styles.containerStyle}>\n          <h2>{categoryName}</h2>\n          <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n            {projects.map((project) => (\n              <Fade key={project.title}>\n                <ProjectCard project={project} />\n              </Fade>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    ));\n  };\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        renderProjectsByCategory(data)\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n"],"sourceRoot":""}