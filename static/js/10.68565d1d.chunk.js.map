{"version":3,"sources":["components/projects/ProjectCard.jsx"],"names":["styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","props","_project$links","text","theme","useContext","ThemeContext","project","_useState","useState","_useState2","_slicedToArray","lightboxVisible","setLightboxVisible","_useState3","_useState4","currentImageIndex","setCurrentImageIndex","images","original","image","thumbnail","concat","_toConsumableArray","additionalImages","map","_jsxs","Col","children","Card","style","_objectSpread","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","_jsx","Img","variant","src","onClick","Body","Title","title","Text","bodyText","ReactMarkdown","links","link","Button","window","open","href","tags","Footer","cardFooterBackground","tag","Badge","pill","bg","bsPrimaryVariant","Lightbox","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest"],"mappings":"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","file":"static/js/10.68565d1d.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport 'react-image-lightbox/style.css';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n  const [lightboxVisible, setLightboxVisible] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const openLightbox = (index) => {\n    setCurrentImageIndex(index);\n    setLightboxVisible(true);\n  };\n\n  const closeLightbox = () => {\n    setLightboxVisible(false);\n  };\n\n  const images = [\n    { original: project?.image, thumbnail: project?.image }, // Main image\n    ...(project?.additionalImages || []).map((image) => ({\n      original: image,\n      thumbnail: image,\n    })), // Additional images\n  ];\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} onClick={() => openLightbox(0)} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n\n      {/* Use the react-image-lightbox */}\n      {lightboxVisible && (\n        <Lightbox\n          mainSrc={images[currentImageIndex].original}\n          nextSrc={images[(currentImageIndex + 1) % images.length].original}\n          prevSrc={images[(currentImageIndex + images.length - 1) % images.length].original}\n          onCloseRequest={closeLightbox}\n          onMovePrevRequest={\n            () => setCurrentImageIndex((currentImageIndex + images.length - 1) % images.length)\n          }\n          onMoveNextRequest={() => setCurrentImageIndex((currentImageIndex + 1) % images.length)}\n        />\n      )}\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    additionalImages: PropTypes.arrayOf(PropTypes.string),\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        href: PropTypes.string.isRequired,\n      }),\n    ),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n"],"sourceRoot":""}